*** Begin Patch
*** Update File: sistema-frontend/src/pages/Relatorios.jsx
@@
 const fetchEstoque = useCallback(async ({ page, perPage, q }) => {
     setStkLoading(true)
     try {
       const resp = await api.get('/relatorios/estoque-atual', {
         params: { page, per_page: perPage, q: q || undefined }
       })
       const total = Number(resp.headers['x-total-count'] || 0)
       setStkItens(Array.isArray(resp.data) ? resp.data : [])
       setStkTotal(total)
       setStkPage(page)
       setStkPerPage(perPage)
     } catch (e) {
       console.error('Erro ao carregar estoque atual:', e)
       setStkItens([])
       setStkTotal(0)
     } finally {
       setStkLoading(false)
     }
   }, [])
 
+  const obterTodosProdutosEstoque = useCallback(async (q) => {
+    const resultados = []
+    let page = 1
+    const perPage = 200
+    try {
+      while (true) {
+        const resp = await api.get('/relatorios/estoque-atual', {
+          params: { page, per_page: perPage, q: q || undefined }
+        })
+        const data = Array.isArray(resp.data) ? resp.data : []
+        resultados.push(...data)
+        const total = Number(resp.headers['x-total-count'] || resultados.length)
+        if (resultados.length >= total || data.length < perPage) {
+          break
+        }
+        page += 1
+      }
+      return resultados
+    } catch (error) {
+      console.error('Erro ao carregar estoque completo para exportação:', error)
+      throw error
+    }
+  }, [])
+
   const carregarOutrosRelatorios = async (p) => {
     const useP = p || periodo
*** End Patch
